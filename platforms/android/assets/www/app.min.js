angular.module("tasks",["ui.router","kinvey"]),angular.module("tasks").controller("tasksController",["$rootScope","$scope","$state","$kinvey","tasks","notify",function(e,o,t,n,r,a){if(!e.activeUser)return null;var i=[];if(o.tasks=r,e.activeUser.admin)for(var l=0;l<=r.length-1;l++)r[l].creator&&r[l].creator.name&&i.indexOf(r[l].creator.name)<0&&i.push(r[l].creator.name);else i.push(e.activeUser.name);o.users=i,o.toLocale=function(e){var o=new Date(e);return o.toLocaleDateString()},o.approve=function(e,o){var t={_id:o.approval._id,approved:e};n.DataStore.save("task-approval",t).then(function(e){console.log("Task approval/disapproval success"),o.approval=t},function(e){console.log("Could not approve the task!... see the error log below..."),console.log(e),a(e.description)})}}]).controller("addTaskController",["$rootScope","$scope","$state","$kinvey",function(e,o,t,n){o.addTask=function(){if(o.addTaskForm.taskName.$error.required||o.addTaskForm.startDate.$error.required||o.addTaskForm.endDate.$error.required)return null;var r={task_name:o.task.name,start_date:o.task.startDate,end_date:o.task.endDate,comments:o.task.comments,creator:e.activeUser};n.DataStore.save("tasks",r,{exclude:["creator"],relations:{creator:"user"}}).then(function(){t.go("root.tasks",{},{reload:!0})},function(e){console.log("There seems to be a problem adding the task!...see the error log below..."),console.log(e),notify(e.description)})}}]),angular.module("tasks").config(["$stateProvider","$urlRouterProvider",function(e,o){e.state("root.tasks",{url:"/tasks",resolve:{tasks:["$rootScope","$kinvey",function(e,o){return e.activeUser?o.DataStore.find("tasks",null,{relations:{approval:"task-approval",creator:"user"}}).then(function(e){return console.log("Fetched records"),e},function(e){console.log("Some error fetching the records!...see log below..."),console.log(e)}):[]}]},views:{"header@root":{templateUrl:"partials/tasks-header.html"},"section@root":{templateUrl:"partials/tasks.html",controller:"tasksController"}}}).state("root.tasks.addtask",{url:"/addtask",views:{"section@root":{templateUrl:"partials/add-task.html",controller:"addTaskController"}}})}]),angular.module("main",["ui.router","kinvey","tasks","login"]),angular.module("main").run(["$kinvey","$state","$rootScope","$document","$timeout","notify",function(e,o,t,n,r,a){console.log(o);var i=!1;n[0].addEventListener("backbutton",function(){return i?navigator.app.exitApp():void 0},!1),e.init({appKey:"kid_Wk8MsXwikg",appSecret:"68c9a63e8a4a41b98898796652bfccc5"}).then(function(e){t.activeUser=e,null===e?(console.log("Kinvey initalized with no active user...redirecting to login page"),o.go("root.login")):(console.log("Kinvey initalized with an active user...redirecting to tasks page"),o.go("root.tasks",{},{reload:!0}))},function(e){console.log("Kinvey could not be initalized ...determining behaviour"),"EmailVerificationRequired"===e.name?(t.activeUser=!1,console.log("The user has not clicked on the link that was sent through email..."),o.go("root.login")):(console.log("Unable to resolve behaviour...see error log below"),console.log(e))})}]),angular.module("main").factory("notify",["$timeout",function(e){return function(o){$notify=$(".notify"),0===$notify.length&&($notify=$("body").append('<div class="notify"></div>'),$notify=$(".notify")),$notify.text(o).addClass("notify-shown"),e(function(){$notify.removeClass("notify-shown")},3e3)}}]),angular.module("main").config(["$stateProvider","$urlRouterProvider",function(e,o){o.otherwise("/"),e.state("root",{"abstract":!0,views:{body:{templateUrl:"partials/body.html"}}})}]),angular.module("login",["ui.router","kinvey"]),angular.module("login").controller("loginController",["$rootScope","$scope","$state","$kinvey","notify",function(e,o,t,n,r){o.login=function(){return o.loginForm.username.$error.required||o.loginForm.password.$error.required?null:void n.User.login({username:o.user.username.trim(),password:o.user.pwd}).then(function(o){console.log("Successfully logged in!"),e.activeUser=o,t.reload()},function(e){console.log("Error logging in!"),console.log(e),r(e.description)})},o.logout=function(){n.User.logout().then(function(){console.log("Successfully logged out!"),e.activeUser=null,t.reload()},function(e){console.log("Some problem logging out...try again!"),console.log(e),r(e.description)})},o.confirm=function(){n.User.me().then(function(o){console.log("User confirmed the email"),e.activeUser=o,t.reload()},function(e){console.log("Some problem confirming the user out...try again!"),console.log(e),r(e.description)})}}]).controller("signupController",["$rootScope","$scope","$state","$kinvey","notify",function(e,o,t,n,r){o.signup=function(){return o.signupForm.$invalid?null:void n.User.signup({username:o.user.username.trim(),password:o.user.pwd,name:o.user.name.trim(),email:o.user.email.trim()}).then(function(o){console.log("Successfully signed up...need email verfication!"),e.activeUser=!1,t.go("root.login")},function(e){console.log("Error sign up!...check error log below"),console.log(e),r(e.description)})}}]),angular.module("login").config(["$stateProvider",function(e){e.state("root.login",{url:"/login",views:{"header@root":{templateUrl:"partials/login-header.html"},"section@root":{templateUrl:"partials/login.html",controller:"loginController"}}}).state("root.signup",{url:"/signup",views:{"header@root":{templateUrl:"partials/signup-header.html"},"section@root":{templateUrl:"partials/signup.html",controller:"signupController"}}})}]);var environment=function(){var e=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?"webview":"browser";return{agent:e,readyEvent:"webview"===e?"deviceready":"DOMContentLoaded"}}();console.log("environment "+JSON.stringify(environment));var app=new function(){function e(){console.log("Bootstrapping angular on main module..."),angular.bootstrap(document,["main"])}function o(){console.log("Ready event binding"),document.addEventListener(environment.readyEvent,e,!1)}return{initialize:function(){console.log("Initializing app by binding handlers to different events that the app responds to..."),o()}}};app.initialize();