angular.module("tasks",["ui.router","kinvey"]),angular.module("tasks").controller("tasksController",["$scope","$state","$kinvey","tasks","activeUser",function(e,o,r,t,n){e.tasks=t,e.hasActiveUser=null!==n?!0:!1;var a=e.isAdmin=n.admin?!0:!1,l=[];if(a)for(var s=0;s<=t.length-1;s++)t[s].creator&&t[s].creator.username&&l.indexOf(t[s].creator.username)<0&&l.push(t[s].creator.username);else l.push(n.username);e.users=l,e.approve=function(e,o){var t={_id:o.approval._id,approved:e};r.DataStore.save("task-approval",t).then(function(e){console.log("Task approval/disapproval success"),o.approval=t},function(e){console.log("Could not approve the task!... see the error log below..."),console.log(e)})}}]).controller("addTaskController",["$scope","$state","$kinvey","activeUser",function(e,o,r,t){e.addTask=function(){if(e.addTaskForm.taskName.$error.required||e.addTaskForm.startDate.$error.required||e.addTaskForm.endDate.$error.required)return null;var n={task_name:e.task.name,start_date:e.task.startDate,end_date:e.task.endDate,comments:e.task.comments,creator:t};r.DataStore.save("tasks",n,{exclude:["creator"],relations:{creator:"user"}}).then(function(){o.go("root.tasks",{},{reload:!0})},function(e){console.log("There seems to be a problem adding the task!...see the error log below..."),console.log(e)})}}]),angular.module("tasks").config(["$stateProvider","$urlRouterProvider",function(e,o){e.state("root.tasks",{url:"/tasks",resolve:{activeUser:["$kinvey",function(e){return e.getActiveUser()}],tasks:["$kinvey",function(e){return e.DataStore.find("tasks",null,{relations:{approval:"task-approval",creator:"user"}}).then(function(e){return console.log("Fetched records"),e},function(e){console.log("Some error fetching the records!...see log below..."),console.log(e)})}]},views:{"section@root":{templateUrl:"partials/tasks.html",controller:"tasksController"}}}).state("root.tasks.addtask",{url:"/addtask",views:{"section@root":{templateUrl:"partials/add-task.html",controller:"addTaskController"}}})}]),angular.module("main",["ui.router","kinvey","tasks","login"]),angular.module("main").config(["$stateProvider","$urlRouterProvider",function(e,o){o.otherwise("/"),e.state("root",{views:{body:{templateUrl:"partials/body.html"},"header@root":{templateUrl:"partials/main-nav.html"}}})}]),angular.module("login",["ui.router","kinvey"]),angular.module("login").run(["$kinvey","$state",function(e,o){function r(e,o){var r=e.getActiveUser();console.log("Determining behaviour..."),null!==r?(console.log("Active user confirmed...redirecting to root state..."),o.go("root.tasks")):(console.log("No active user...redirecting to login page..."),o.go("root.login"))}e.init({appKey:"kid_Wk8MsXwikg",appSecret:"68c9a63e8a4a41b98898796652bfccc5"}).then(function(){return console.log("Kinvey initalized...checking for active user"),r(e,o)},function(t){return console.log("Kinvey could not be initalized (see error log below)...determining behaviour"),console.log(t),r(e,o)})}]),angular.module("login").controller("loginController",["$scope","$state","$kinvey","activeUser",function(e,o,r,t){null!==t?(e.hasActiveUser=!0,e.username=t.username,e.isAdmin=t.admin?!0:!1):e.hasActiveUser=!1,e.login=function(){return e.loginForm.username.$error.required||e.loginForm.password.$error.required?null:void r.User.login({username:e.user.name,password:e.user.pwd}).then(function(e){console.log("Successfully logged in!"),o.reload()},function(e){console.log("Error logging in!"),console.log(e),o.reload()})},e.logout=function(){r.User.logout().then(function(){console.log("Successfully logged out!"),o.reload()},function(e){console.log("Some problem logging out...try again!"),console.log(e),o.reload()})}}]),angular.module("login").config(["$stateProvider",function(e){e.state("root.login",{url:"/login",resolve:{activeUser:["$kinvey",function(e){return e.getActiveUser()}]},views:{"header@root":{templateUrl:"partials/login-header.html"},"section@root":{templateUrl:"partials/login.html",controller:"loginController"}}})}]);var environment=function(){var e="browser";return{agent:e,readyEvent:"webview"===e?"deviceready":"DOMContentLoaded"}}();console.log("environment "+JSON.stringify(environment));var app=new function(){function e(){console.log("Bootstrapping angular on main module..."),angular.bootstrap(document,["main"])}function o(){console.log("Ready event binding"),document.addEventListener(environment.readyEvent,e,!1)}return{initialize:function(){console.log("Initializing app by binding handlers to different events that the app responds to..."),o()}}};app.initialize();